apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: build-quarkus-app
spec:
  inputs:
    resources:
      - name: source
        type: git
    params:
      - name: contextDir
        description: the context dir within source
        default: .
      - name: mavenMirrorUrl
        description: the maven mirror url
        default: http://repo1.maven.apache.org/maven2
      - name: destinationImage
        description: Parameter Description
        default: "$(outputs.resources.builtImage.url)"
      - name: dockerFile
        description: Parameter Description
        default: Dockerfile.jvm   
  outputs:
    resources:
      - name: builtImage
        type: image
  stepTemplate:
    resources:
      limits:
        cpu: 3
        memory: 4Gi
  steps:
    - name: build-sources
      image: quay.io/quarkus/centos-quarkus-maven:19.3.1-java8
      workingDir: "/workspace/source/$(inputs.params.contextDir)"
      args:
        - mvn
        - -DskipTests
        - clean
        - package
      env:
        - name: HOME
          value: /home/quarkus
        - name: MAVEN_MIRROR_URL
          value: "$(inputs.params.mavenMirrorUrl)"
      securityContext:
        allowPrivilegeEscalation: false
        privileged: false
        # the default underprivileged user to be used
        runAsUser: 1001
    # - name: ls-target
    #   image: busybox
    #   command: ['ls','-ltr', "/workspace/source/$(inputs.params.contextDir)/target"]
    #   securityContext:
    #     allowPrivilegeEscalation: false
    #     privileged: false
    #     # the default underprivileged user to be used
    #     runAsUser: 1001
    - name: build-image
      image: quay.io/buildah/stable
      workingDir: "/workspace/source/$(inputs.params.contextDir)"
      command:
        [
          "buildah",
          "bud",
          "--tls-verify=true",
          "--layers",
          "-f",
          "$(inputs.params.dockerFile)",
          "-t",
          "$(inputs.params.destinationImage)",
          ".",
        ]
      securityContext:
        privileged: true
        runAsUser: 0
      volumeMounts:
        - name: varlibc
          mountPath: /var/lib/containers
    - name: build-push
      image: quay.io/buildah/stable
      workingDir: "/workspace/source/$(inputs.params.contextDir)"
      command:
        [
          "buildah",
          "push",
          "--tls-verify=true",
          "$(inputs.params.destinationImage)",
          "docker://$(inputs.params.destinationImage)"
        ]
      securityContext:
        privileged: true
        runAsUser: 0
      volumeMounts:
        - name: varlibc
          mountPath: /var/lib/containers
  volumes:
    - name: varlibc
      emptyDir: {}
